"use strict";(function(){function b(d,e,g){function a(j,i){if(!e[j]){if(!d[j]){var f="function"==typeof require&&require;if(!i&&f)return f(j,!0);if(h)return h(j,!0);var c=new Error("Cannot find module '"+j+"'");throw c.code="MODULE_NOT_FOUND",c}var k=e[j]={exports:{}};d[j][0].call(k.exports,function(b){var c=d[j][1][b];return a(c||b)},k,k.exports,b,d,e,g)}return e[j].exports}for(var h="function"==typeof require&&require,c=0;c<g.length;c++)a(g[c]);return a}return b})()({1:[function(){},{}],2:[function(){var a={scene:null,camera:null,renderer:null,width:window.innerWidth,height:window.innerHeight,particleCount:1800,mouse:{x:null,y:null},init:function c(){var a=this;this.camera=new THREE.PerspectiveCamera(70,this.width/this.height,.1,1e4),this.camera.position.z=1,this.scene=new THREE.Scene,this.geometry=new THREE.Geometry,this.material=new THREE.PointsMaterial({color:16777215});for(var d=0;d<this.particleCount;d++){var e=100*Math.random()-50,f=100*Math.random()-50,g=100*Math.random()-250,h=new THREE.Vector3(e,f,g);this.geometry.vertices.push(h)}var b=new THREE.Points(this.geometry,this.material);this.scene.add(b),this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.renderer.setSize(this.width,this.height),document.body.appendChild(this.renderer.domElement),this.animate(),window.addEventListener("resize",function(){return a.resize()})},animate:function b(){var a=this;requestAnimationFrame(function(){return a.animate()});for(var c=this.particleCount;c--;){var d=this.geometry.vertices[c];-200>d.y&&(d.y=200,d.y=0);var e=.5*Math.random();e*=1===Math.floor(2*Math.random())?1:-1,d.y-=e,d.x-=e,d.z-=e}this.geometry.verticesNeedUpdate=!0,this.renderer.render(this.scene,this.camera)},resize:function a(){this.width=window.innerWidth,this.height=window.innerHeight,this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height)}};a.init()},{}]},{},[1,2]);
